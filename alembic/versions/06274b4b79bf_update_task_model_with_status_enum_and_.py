"""update task model with status enum and nullable end_date

Revision ID: 06274b4b79bf
Revises: 948796f61b79
Create Date: 2025-05-08 12:23:08.533296

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '06274b4b79bf'
down_revision: Union[str, None] = '948796f61b79'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('tasks', 'start_date',
                    existing_type=postgresql.TIMESTAMP(timezone=True),
                    type_=sa.DateTime(),
                    existing_nullable=True)
    op.alter_column('tasks', 'end_date',
                    existing_type=postgresql.TIMESTAMP(timezone=True),
                    type_=sa.DateTime(),
                    existing_nullable=True)
    op.alter_column('tasks', 'status',
                    existing_type=sa.VARCHAR(),
                    nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    op.alter_column('tasks', 'status',
                    existing_type=sa.VARCHAR(),
                    nullable=True)
    op.alter_column('tasks', 'end_date',
                    existing_type=sa.DateTime(),
                    type_=postgresql.TIMESTAMP(timezone=True),
                    existing_nullable=True)
    op.alter_column('tasks', 'start_date',
                    existing_type=sa.DateTime(),
                    type_=postgresql.TIMESTAMP(timezone=True),
                    existing_nullable=True)
    # ### end Alembic commands ###
